/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/MOM Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags

    // References
    input                      =  '${projectDir}/assets/samplesheet_isoforms.csv' // this needs to be changes in the groovy
    genome                     = 'GRCh38'
    gencode                    = true // these need to be changes in modules.config
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    
    igenomes_ignore            = true
    save_reference             =  false
    skip_alignment             = true    // these need to be changes in modules.config
    skip_pseudo_alignment      = true    // these need to be changes in modules.config
    aligner                    = null     // these need to be changes in modules.config
    skip_markduplicates        = true     // these need to be changes in modules.config
    skip_stringtie             = true     // these need to be changes in modules.config

    ///SRA/////////////////////////
    input_type                  = 'sra'
    ena_metadata_fields         = 'run_accession,experiment_accession,library_layout,fastq_ftp,fastq_md5'
    sample_mapping_fields         = 'run_accession,experiment_accession,library_layout,fastq_ftp,fastq_md5'
    synapse_config              = null
    force_sratools_download     = false
    skip_fastq_download         = false
    nf_core_pipeline            = null //'rnaseq'
    nf_core_rnaseq_strandedness = 'auto'

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // UMI handling
    with_umi                   = false
    skip_umi_extract           = false
    umitools_extract_method    = 'string'
    umitools_grouping_method   = 'directional'
    umitools_dedup_stats       = false
    umitools_bc_pattern        = null
    umitools_bc_pattern2       = null
    umitools_umi_separator     = null
    umi_discard_read           = null
    save_umi_intermeds         = false
    
    // QC
    skip_qc                    = true  // need to remove
    skip_fastqc                = false
    skip_dupradar              = false
    skip_multiqc               = false
    skip_preseq                = true

    // Trimming
    min_trimmed_reads          = 10000
    clip_r1                    = null
    clip_r2                    = null
    three_prime_clip_r1        = null
    three_prime_clip_r2        = null
    trim_nextseq               = null
    save_trimmed               = true
    skip_trimming              = false

    // BBSplit genome filtering
    bbsplit_fasta_list         = null
    save_bbsplit_reads         = false
    skip_bbsplit               = true

    // Ribosomal RNA removal
    remove_ribo_rna            = false
    save_non_ribo_reads        = true
    ribo_database_manifest     = "${projectDir}/assets/rrna-db-defaults.txt"

    // Alignment
    save_merged_fastq          = false
    bam_csi_index              = false
    hisat2_build_memory        = '46.GB'  // Amount of memory required to build HISAT2 index with splice sites
    stringtie_ignore_gtf       = false
    min_mapped_reads           = 5
    save_merged_fastq          = false
    save_unaligned             = false
    save_align_intermeds       = false

    // salmon
    salmon_quant_libtype       = null
   // extra_salmon_quant_args    = null


    // Alignment with star
    read_length                     = 101 // jdbOverhang
    //star_index                      = "/home/bianca/starindex/"
   // star_index                      = "s3://a-test-bucket-for-nextflow/a-folder/starindex"
   //    star_max_collapsed_junc         = 88132572426   // STAR parameter limitOutSJcollapsed to specify max number of collapsed junctions
//    stargtf                         = '/home/bianca/Homo_sapiens/NCBI/GRCh38/Annotation/Genes/genes.gtf'
    star_twopass                    = true
    star_ignore_sjdbgtf             = false     // Ignore GTF file while creating index or alignment by STAR
    star_max_memory_bamsort         = 88132572426        // STAR parameter limitBAMsortRAM to specify maximum RAM for sorting BAM
    star_bins_bamsort               = 12        // STAR parameter outBAMsortingBinsN to specify number of bins for sorting BAM

    star_nthreads                   = 20
    seq_center                      = null
    seq_platform                    = 'illumina' // Required for preparing for BAM headers for GATK to work
    bam_csi_index                   = false
    save_unaligned                  = false
    save_align_intermeds            = false
    //star_limitGenomeGenerateRAM   = 97132572426

  //isoforms ///////////////////////////////////////////////////////////////////////////////////
    isoforms                         = false
    sra_isoforms                        = true //true
    input_isoforms                   = "${projectDir}/assets/samplesheet_isoforms.csv"
    featurecounts_group_type_isoforms= 'gene_biotype'
    gencode_isoforms                 = true

    
    //fasta_salmon_isoforms               = '/home/bianca/gencode2/gencode.v44.transcripts2.fa' //TRY THIS AND CHANGE IN THE ISOFORMANALYSIS


   /// run from directory of quant.sf /////////////////////
    //fasta_isoforms                   = '/home/bianca/isoforms/example_isoform_nt.fasta.gz'
    //transcript_fasta_isoforms        = '/home/bianca/isoforms/example_isoform_nt.fasta.gz'
    //gtf_isoforms                     = '/home/bianca/isoforms/example.gtf.gz'
    //salmon_index_isoforms            = '/home/bianca/gencode2/salmon_index/
    //salmonDirIso                     = '/home/bianca/testresults/isoforms/salmon_isoforms/' // change this if you performed the analysis outside
    // sra_isoforms                    = false
    //skip_qc_isoforms                    = true
    //skip_alignment_isoforms             = true
    //skip_pseudo_alignment_isoforms      = true
  ////////////////////////////////////////////////////////////

    skip_qc_isoforms                    = false
    skip_alignment_isoforms             = false
    skip_pseudo_alignment_isoforms      = false

    salmonDirIso                        = "${projectDir}/assets/" // change this for your own salmon outputs  or should be whole directory where the pipeline outputs the results
    //salmonDirIso                        = '/home/bianca/testresults/isoforms/salmon_isoforms/'  

    //isoforms isoSwitch
    isopart2reduceToSwitchingGenes      = true
    topisoforms                         = true
    isoformstosee                       = 'SNCA' //'GENES'
    saturn_run                          = false
    saturn_fdr                          = 0.05
    saturn_fc                           = 0.1
    dexseqpval                          = 0.05
    dexseqfdr                           = 0.0001
    prefilterisoforms                   = true

    aligner_isoforms                    = 'salmon' // 'star', 'hisat2'
    pseudo_aligner_isoforms             = 'salmon'

    //salmon_index_isoforms               = '/home/bianca/gencode2/salmon/'
    salmon_index_isoforms               = null
    extra_salmon_quant_args_iso          = null

    skip_preseq_isoforms                = true
    bbsplit_fasta_list_isoforms         = null
    save_bbsplit_reads                  = false
    skip_bbsplit_isoforms               = true
    skip_markduplicates_isoforms        = true
    star_index_isoforms                 = null
    hisat2_index_isoforms               = null
    skip_markduplicates_isoforms        = true
    skip_stringtie_isoforms             = true

    pea_isoforms      = "biotranslator"
    biotrans_isoforms_organism          = "hsapiens"
    biotrans_isoforms_keytype          = "gene_symbol"
    biotrans_isoforms_ontology         = "GO" // MGIMP, Reactome



    /// mompreprocess for isoforms - not yet utilized
    mom_filt_method_isoforms            = "filterByExp"  //filterByExp filterCustom
    mom_filt_cutoff_isoforms            = 0
    mom_norm_method_isoforms            = "calcNorm"     // calncNorm quantile
    mom_batch_method_isoforms           = "none"
    mom_batch_condition_isoforms        = "condition"   // which is the condition of interest, must be present in columns of sample info
    mom_batch_batch_isoforms            = "replicate"   // which is the batch, must be present in columns of sample info




    //genes//////////////////////////////////////////////////////////////
    genes                           = false
    sra_genes                        =false
    input_genes                     = "${projectDir}/assets/samplesheet_genes.csv"

    featurecounts_group_type_genes  = 'gene_biotype'
    gencode_genes                   = true
    featurecounts_group_type_genes  = 'gene_biotype'


    skip_qc_genes                   = true
    skip_preseq_genes               = true
    skip_markduplicates_genes       = true
    skip_pseudo_alignment_genes     = true

    pseudo_aligner_genes            = 'salmon'
    skip_alignment_genes            = true

    aligner_genes                   = null // 'star', 'hisat2'
    star_index_mirna                = null
    hisat2_index_mirna              = null
    skip_markduplicates_genes       = true
    skip_stringtie_genes            = true

    salmon_index_genes            = null

    //salmonDirGenes                  = '/home/bianca/testresults/genes/salmon_genes/'  // change this for salmon outputs

    extra_salmon_quant_args_genes    = null



    count_matrix_genes              = '${projectDir}/assets/genes.txt'
    input_genes                     = "${projectDir}/assets/samplesheet_genes.csv"
    mom_change_anot_genes           = false
    mom_filt_method_genes           = "filterByExp"  //filterByExp filterCustom
    mom_filt_cutoff_genes           = 0
    mom_norm_method_genes           = "none"     // calncNorm quantile
    mom_norm_condition_genes           = "condition"   // must be columns in samples info
    mom_norm_treatment_genes           = "batch"   // must be columns in samples info
    mom_batch_method_genes          = "none"
    mom_batch_condition_genes       = "condition"    // which is the condition of interest, must be present in columns of sample info
    mom_batch_batch_genes           = "batch"   // which is the batch, must be present in columns of sample info

    alg_genes                       = 'rp'     // deseq2, rp


    batchdeseq2_genes               = false
    deseqFormula_genes              = "~0 + condition"  // batch and condition have to be column names in deseq2 samlesinfo
    con1_genes                     = "mkc"   // deseq2, has to be cell in samplesinfo
    con2_genes                     = "dmso"  // deseq2, has to be cell in samplesinfo

    dgergroupingfactor_genes        =  "condition"
    edgerformulamodelmatrix_genes   =  "~0 + condition"
    edgercontrasts_genes            = "TNBC-non_TNBC"
    
    //BIOTRANSLATOR
    pea_genes      = "clusterprofiler"
    biotrans_genes_organism          = "hsapiens"
    biotrans_genes_keytype          = "gene_symbol"
    biotrans_genes_ontology         = "GO" // MGIMP, Reactome

    //mirna///////////////////////////////////////////////////////////////////////////
    mirna                            = false
    sra_mirna                        = false
    input_mirna                      = "${projectDir}/assets/samplesheet_mirna.csv"
    featurecounts_group_type_mirna   = 'gene_biotype'
    gencode_mirna                    = true
    //fasta_mirna                      = '/home/bianca/gencode2/GRCh38.primary_assembly.genome.fa.gz'
    //transcript_fasta_mirna           = '/home/bianca/gencode2/gencode.v44.transcripts.fa.gz'
    //gtf_mirna                        = '/home/bianca/gencode2/ENCFF470CZH.gtf.gz'

    skip_qc_mirna                    = true
    skip_preseq_mirna                = true
    bbsplit_fasta_list_mirna         = null
    save_bbsplit_reads               = false
    skip_bbsplit_mirna               = true
    skip_markduplicates_mirna        = true
    skip_alignment_mirna             = true

    aligner_mirna                    = null // 'star', 'hisat2'
    star_index_mirna                 = null
    hisat2_index_mirna               = null
    skip_markduplicates_mirna        = true
    skip_stringtie_mirna             = true

    skip_pseudo_alignment_mirna      = true
    pseudo_aligner_mirna             = 'salmon'
    salmon_index_mirna               = null
   // salmonDirmiRNA                   = '/home/bianca/testresults/mirna/salmon_mirna/'  // change this for salmon outputs
    extra_salmon_quant_args_mirna    = null



    count_matrix_mirna           = '${projectDir}/assets/mirna.txt'
    
    input_mirna          = "${projectDir}/assets/samplesheet_mirna.csv"
    mom_change_anot_mirna           = false
    mom_filt_method_mirna            = "filterByExp"  //filterByExp filterCustom
    mom_filt_cutoff_mirna            = 0
    mom_norm_method_mirna            = "calcNorm"     // calncNorm quantile
    mom_norm_condition_mirna           = "condition"   // must be columns in samples info
    mom_norm_treatment_mirna           = "batch"   // must be columns in samples info
    mom_batch_method_mirna           = "none"
    mom_batch_condition_mirna        = "condition"    // which is the condition of interest, must be present in columns of sample info
    mom_batch_batch_mirna            = "batch"   // which is the batch, must be present in columns of sample info

    alg_mirna                       = "rp"     // 'edger',deseq2, rp


    batchdeseq2_mirna               = false
    deseqFormula_mirna              = "~0 + condition"  // batch and condition have to be column names in deseq2 samlesinfo
    con1_mirna                     = "mkc"   // deseq2, has to be cell in samplesinfo
    con2_mirna                     = "dmso"  // deseq2, has to be cell in samplesinfo

    dgergroupingfactor_mirna        =  "condition"
    edgerformulamodelmatrix_mirna   =  "~0 + condition"
    edgercontrasts_mirna            = "TNBC-non_TNBC"

    //BIOTRANSLATOR
    pea_mirna      = "clusterprofiler"
    biotrans_mirna_organism          = "hsapiens"
    biotrans_mirna_keytype          = "gene_symbol"
    biotrans_mirna_ontology         = "GO" // MGIMP, Reactome

   //proteins  /////////////////////////////////////////////////////////////////////

    proteins                = false
    count_matrix_proteins               = "${projectDir}/assets/proteins.txt"
    input_proteins          = "${projectDir}/assets/samplesheet_proteins.csv"

    mom_prot_change_anot           = false // convert to hgnc_symbols
    mom_prot_filt_method         = "filterByExp"  //filterByExp filterCustom
    mom_prot_filt_cutoff         = 0
    mom_prot_norm_method         = "calcNorm"     // calncNorm quantile
    mom_prot_norm_condition         = "condition"  // must be columns in samples info
    mom_prot_norm_treatment         = "batch"   // must be columns in samples info
    mom_prot_batch_method        = "none"
    mom_prot_batch_condition    = "condition"   // which is the condition of interest, must be present in columns of sample info
    mom_prot_batch_batch         = "batch"   // which is the batch, must be present in columns of sample info

    alg_proteins                       = 'rp'     // deseq2, rp


    batchdeseq2_proteins               = false
    deseqFormula_proteins              = "~0 + condition"  // batch and condition have to be column names in deseq2 samlesinfo
    con1_proteins                     = "TNBC"   // deseq2, has to be cell in samplesinfo
    con2_proteins                     = "non_TNBC"  // deseq2, has to be cell in samplesinfo

    dgergroupingfactor_proteins        =  "condition"
    edgerformulamodelmatrix_proteins   =  "~0 + condition"
    edgercontrasts_proteins            = "TNBC-non_TNBC"

    //BIOTRANSLATOR
    pea_proteins      = "biotranslator"
    biotrans_pro_organism          = "hsapiens"
    biotrans_pro_keytype          = "gene_symbol"
    biotrans_pro_ontology         = "GO" // MGIMP, Reactome

    //lipids  ///////////////////////////////////////////////////////////////////////////

    lipids                  = false
    additional_omics_lipids = false
    count_matrix_lipids               = "${projectDir}/assets/lipids.txt"
    
    input_lipids               = "${projectDir}/assets/samplesheet_lipids.csv"

    mom_lipid_change_anot           = false
    mom_lipid_filt_method         = "filterByExp"  //filterByExp filterCustom
    mom_lipid_filt_cutoff         = 0
    mom_norm_lipid_cutoff         = 100000000
    mom_lipid_norm_condition         = "condition"   // must be columns in samples info
    mom_lipid_norm_treatment         = "batch"   // must be columns in samples info
    mom_lipid_batch_method        = "none"
    mom_lipid_batch_condition    = "condition"   // which is the condition of interest, must be present in columns of sample info
    mom_lipid_batch_batch         = "batch"   // which is the batch, must be present in columns of sample info

    alg_lipids                       = 'rp'     // deseq2, rp


    batchdeseq2_lipids               = false
    deseqFormula_lipids              = "~0 + condition"  // batch and condition have to be column names in deseq2 samlesinfo
    con1_lipids                     = "mkc"   // deseq2, has to be cell in samplesinfo
    con2_lipids                     = "dmso"  // deseq2, has to be cell in samplesinfo

    dgergroupingfactor_lipids        =  "treatment"
    edgerformulamodelmatrix_lipids   =  "~0 + treatment"
    edgercontrasts_lipids            = "non_tnbc-tnbc"

    //lipidr
    lipidr                           = true
    lipidr_normalize                 = false
    lipidr_formula                   = "~condition"  // has to be something with condition
    lipidr_condition                 = "TNBC"        // has to be cell in sampleInfo

    //clusterprofiler
    features                         = null
    alg                        = "rp"
    genes_genespval                  = 0.1
    mirna_genespval                  = 0.1
    proteins_genespval               = 0.1
    lipids_genespval                 = 0.1
    isoforms_genespval                 = 0.1

    //BIOTRANSLATOR all
    
    pea_all      = "biotranslator"
    biotrans_all_organism          = "hsapiens"
    biotrans_all_keytype          = "gene_symbol"
    biotrans_all_ontology         = "GO" // MGIMP, Reactome
    biotrans_all_pval             = 0.05
    biotrans_all_path              = "${projectDir}/results/prepareforbio/"

    //BIOTRANSLATOR run it alone
    biotranslator_alone = false
    biotrans_input             = "${projectDir}/assets/ensembl_9.txt"
    biotrans_organism          = "hsapiens"
    biotrans_keytype          = "hene_symbol"
    biotrans_ontology         = "GO" // MGIMP, Reactome

    //Comparative run it alone
    comparative_alone = false
    biocomp_input             = "${projectDir}/assets/ensembl_9.txt"
    biocomp_organism          = "hsapiens"
    biocomp_keytype          = "hene_symbol"
    biocomp_ontology         = "GO" // MGIMP, Reactome
    biocomp_dummy         = "${projectDir}/assets/dummy_file.txt"

    //Comparative analysis all
    biocomp_all_organism          = "hsapiens"
    biocomp_all_keytype          = "gene_symbol"
    biocomp_all_ontology         = "GO" // MGIMP, Reactome

    // Biologically driven integration approaches
    multimir_alone              = false
    lipidb_alone                = false
    omnipath_alone              = false
    omnipath_integrated_alone    = false
    omnipath_integrated_gao = "${projectDir}/assets/dummy_file"
    omnipath_on_all              = true
    omnipath_biotrans           = "${projectDir}/biotranslator"
    omnipath_choose           = "${projectDir}/biotranslator"
    omnipath_choose_type           = "${projectDir}/biotranslator"
    omnipath_additional_info_bool        = true
    omnipath_additional_info_val        = "SignaLink_pathway"
    omnipath_additional_info_attribute        = "TGF"
    
    //MCIA

    runmcia                        = false
    pathmcia                        = "${projectDir}/results/mcia/" // should of the format complete output directory/mcia
    samplesinfomcia                 = "${projectDir}/assets/samplesheet_genes.csv"
    mcia_a1lim                      = '0, Inf'
    mcia_a2lim                      = '-Inf, 0'

    // RIDDER
    riddernames                    = true // start from names (or fasta)
    ridder                         = true
    type                            ="hgnc_symbol"
    seqType                         ="cdna"
    ridder_alone                   = true
    ridder_input                   = "${projectDir}/assets/ire1_cleaned/ire1_lipids_isoforms_proteins"


    //DESEQ2
    deseq2single_matrix             = true

    //RANKPROD
    rp                         = false
    //count_matrix               = 's3://a-test-bucket-for-nextflow/a-folder/test_matrix.txt'
    //samplesInfo                = 's3://a-test-bucket-for-nextflow/a-folder/sample2'
    runRank                   = false
    logged                    = false
    logbase                   = 2
    norm                      = false
    wantgenes                 = false
    numgenes                  = 100
    method                    = 'pval'
    cutoff                    = 0.05
    outdirRank                = 'rankprod'
    



    //CORRELATION
    correlation_alone          = false
    //cor_m2                     = "/home/bianca/obs/multiomicsintegrator/assets/ire1_cleaned/ire1_all_isoforms_no_cleaned_exp_de.txt"
    cor_m2                     = "/home/bianca/obs/multiomicsintegrator/assets/ire1_cleaned/proteins_defeatures_expression.txt"
    //cor_m2                     = "/home/bianca/obs/multiomicsintegrator/assets/ire1_cleaned/mirna_defeatures_expression.txt"
    cor_m1                     = "/home/bianca/obs/multiomicsintegrator/assets/ire1_cleaned/ire1_lncrna_xbp1.txt"
    cor_method                 = "pearson"
    cor_corc                   = 0.5
    cor_pvalc                  = 0.05
    
    //FIMO
    fimo_only                      = false
    fimo_sequences                 = "${projectDir}/assets/dgat2"
    fimo_pval                         = 0.05
    fimo_pattern                      = "[ATCG]C[ATCG]GC[ATCG]G[ATCG]"
    
    //RNAFOLD
    rnafold_only                       = false
    rnafold_sequences                 ="${projectDir}/assets/dummy_file"
    rnafold_additional                = "--constraint"

    //RNAEVAL
    rnaeval_only                       = false
    rnaeval_sequences                 ="${projectDir}/assets/dummy_file"
    
    //PROBSCAN 
    probscan_only                      = false
    probscan_sequences                 = "${projectDir}/assets/dummy_file"
    probscan_additional                = "--hairpin -p 520-528"



    // Boilerplate options
    outdir                     = '/home/bianca/ire1_lipids_proteins_isoforms'
    dummy_file2                 = '/home/bianca/obs/multiomicsintegrator/assets/dummy_file2.txt'  // ${projectDir}/assets/dummy_file3.txt'
    dummy_file3                 = '/home/bianca/obs/multiomicsintegrator/assets/dummy_file3.txt' // ${projectDir}/assets/dummy_file3.txt'
    
    //outdir                     = 's3://a-test-bucket-for-nextflow/a-folder/'
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false


    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '36.GB'
    max_cpus                   = 17
    max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load ASAGlab/momcustom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/lncrna.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/lncrna profiles: ${params.custom_config_base}/pipeline/lncrna.config")
// }


profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        params.enable_conda    = true
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    mamba {
        params.enable_conda    = true
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64 --memory 18G'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 32
        executor.memory        = 64.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}


// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'ASAGlab/moi'
    author          = """Bianca Pasat"""
    homePage        = 'https://github.com/ASAGlab/mom'
    description     = """workflow for Omics analysis"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
